{"version":3,"sources":["Components/Card/card.component.jsx","Components/Card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","name","Cardlist","className","monsters","map","id","App","state","fetch","then","response","json","users","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAGaA,EAAO,SAAAC,GAGFA,EAAMC,QAAQC,MCFnBC,EAAW,SAAAH,GAAK,OACxB,qBAAKI,UAAW,YAAhB,SACIJ,EAAMK,SAASC,KAAI,SAAAL,GAAO,OACvB,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQM,UC0BjBC,E,kDA5Bf,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXJ,SAAU,IAHA,E,qDAOd,WAAqB,IAAD,OAClBK,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEV,SAAUS,S,oBAG5C,WACE,OACE,8BACE,cAAC,EAAD,CAAUT,SAAWW,KAAKP,MAAMJ,iB,GAjBpBY,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2829e205.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => {\r\n    (\r\n        <div className='card-container'>\r\n            <h1> {props.monster.name} </h1>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from '../Card/card.component'\r\n\r\nexport const Cardlist = props => \r\n    (<div className= 'card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key= {monster.id} monster={monster}/>\r\n        ))}\r\n    </div>);\r\n","import React from 'react'\nimport { Cardlist } from './Components/Card-list/card-list.component'\n\n\nclass App extends React.Component {\nconstructor() {\n  super();\n  this.state = { \n    monsters: []\n  }\n}\n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n   .then(response => response.json())\n   .then(users => this.setState({ monsters: users}));\n}\n \nrender() {\n  return(\n    <div>\n      <Cardlist monsters= {this.state.monsters}/>\n    </div>\n  )\n}\n\n\n\n\n\n}\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}